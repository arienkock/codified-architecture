/**
 * This file was auto-generated by scripts/generate-openapi-handlers.ts.
 * Modifications should be made in the generator or its template.
 */

import { z } from 'zod';

const pathParamsSchema = {{PATH_PARAMS_SCHEMA}};
const queryParamsSchema = {{QUERY_PARAMS_SCHEMA}};
const headerParamsSchema = {{HEADER_PARAMS_SCHEMA}};
const requestBodySchema = {{REQUEST_BODY_SCHEMA}};

const responseSchemas = {
{{RESPONSE_SCHEMAS}}
} as const;

export type {{HANDLER_NAME}}PathParams = z.infer<typeof pathParamsSchema>;
export type {{HANDLER_NAME}}QueryParams = z.infer<typeof queryParamsSchema>;
export type {{HANDLER_NAME}}HeaderParams = z.infer<typeof headerParamsSchema>;
export type {{HANDLER_NAME}}RequestBody = z.infer<typeof requestBodySchema>;
export type {{HANDLER_NAME}}ResponseStatus = keyof typeof responseSchemas;
export type {{HANDLER_NAME}}ResponseBodies = {
{{HANDLER_RESPONSE_TYPE_MAP}}
};

export const {{HANDLER_VAR_NAME}} = {
  method: '{{HTTP_METHOD}}' as const,
  path: '{{PATH}}' as const,
  pathParamsSchema,
  queryParamsSchema,
  headerParamsSchema,
  requestBodySchema,
  responseSchemas,
  parsePathParams(input: unknown) {
    return pathParamsSchema.parse(input);
  },
  parseQueryParams(input: unknown) {
    return queryParamsSchema.parse(input);
  },
  parseHeaderParams(input: unknown) {
    return headerParamsSchema.parse(input);
  },
  parseRequestBody(input: unknown) {
    return requestBodySchema.parse(input);
  },
  parseResponse<TStatus extends keyof typeof responseSchemas>(status: TStatus, payload: unknown) {
    const schema = responseSchemas[status];
    if (!schema) {
      throw new Error(`Unsupported status code: ${status}`);
    }
    return schema.parse(payload);
  },
};
